///////////////////////////////////////////////////////////
//////////// ОПИСАНИЕ ТАБЛИЦ //////////////////////////////
///////////////////////////////////////////////////////////

******
Table film
******
Primary_key
ид	     название  жанр    страна    год   Режиссер    длинна     Описание    путь к обложке  путь к файлу	  
film_id | title | genre | country | year | director | duration	| description | cover  | file


******
Table actor		
******
Prim_key
actor_id | name

************
Table film_actor	Связующая таблица
************
Foregn_key	Foregn_key
film_id	    |   actor_id

///////////////////////////////////////////////////////////
//////////// СОЗДАЕМ ТАБЛИЦЫ  /////////////////////////////
///////////////////////////////////////////////////////////

Код для создания таблицы фильмов: 
CREATE TABLE film (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title varchar(150) NOT NULL,
    genre varchar(40) NOT NULL,
    country varchar(70) NOT NULL,
    year int CHECK ( year > 1900 ),
    director varchar(40) NOT NULL,
    duration varchar(20) NOT NULL,
    description varchar NOT NULL,
    cover varchar NOT NULL,
    file varchar NOT NULL
)

///////////////////////////////////////////////////////////
Затем нужно создать таблицу актеров, которая будет иметь отношение к таблице фильмов "Многие ко многим"
Код для создания таблицы актеров:

CREATE TABLE actor(
  actor_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(100) NOT NULL UNIQUE
);

И для организации этой связи нужно сделать связующую таблицу
Код для создания связующей таблицы:

CREATE TABLE film_actor(
	film_id int REFERENCES film(id) ON DELETE CASCADE,
    actor_id int REFERENCES actor(actor_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, actor_id)
);

///////////////////////////////////////////////////////////
Добавление тестовых данных
///////////////////////////////////////////////////////////
Добавление фильмов:
INSERT INTO film(title, genre, country, year, director, duration, description, cover, file)
VALUES('Американка', 'Драма', 'Россия', 1997, 'Дмитрий Месхиев', '1ч 30мин', 'Молодой парень Лешка Колядко, подчиняющийся внешне всем законам уличного братства (портвейн, беломор, драки),
 тяжело переживает дурацкую гибель старшего брата, разбившегося на мотоцикле.
 Брат был для него кумиром, человеком легендарным, уважаемым даже врагами с кирпичного за безумное бесстрашие.
 Брат гулял с девчонкой, отбитой у ребят все с того же кирпичного, таких же хулиганов, что и во всех районах.
Он гонял на мотоцикле в кожаной, летчиковской, куртке отца и в шлеме с номером 13, за ним сидела его девушка Таня,
 а за ней, трепетно касаясь ее, младший брат, еще не понимающий, что обожает и любит не только брата, но и эту девушку.
 Осознать он этого и не мог - она была девушкой брата, а значит, святой и как бы невозможной...', 
 '../images/amerikanka.jpg', '../movie/Amerikanka.avi');

INSERT INTO film(title, genre, country, year, director, duration, description, cover, file)
VALUES('Афоня', 'Комедия', 'СССР', 1975, 'Георгий Данелия', '1 ч 27 мин', 'Весело и беззаботно жил слесарь-сантехник Афанасий. Не гнушался левыми заработками, любил выпить, поволочиться за девушками.
 Так проходил день за днём, но однажды он встретил на танцах удивительную девушку изменившую все.
 Она спасла Борщова от хулиганов, а ее наивные глаза сгубили нежную душу работника труб и прокладок.', 
 '../images/afonya.jpg', '../movie/Afonya.avi');
 
INSERT INTO film(title, genre, country, year, director, duration, description, cover, file)
VALUES('Белые росы', 'Романтическая комедия', 'СССР', 1983, 'Игорь Добролюбов', '1ч 23мин', 'Ветеран труда и трех войн, уважаемый человек в деревне Белые росы — Федор Ходас уже давно овдовел
 и имеет трех взрослых сыновей. Старший чрезмерно расчетлив, младший чересчур весел. Средний уехал на Курилы и каков он теперь отцу неведомо. Но за всех у старика душа болит,
 особенно за младшего балагура…', '../images/br.jpg', '../movie/BR.avi');
 
INSERT INTO film(title, genre, country, year, director, duration, description, cover, file)
VALUES('Между ангелом и бесом', 'Комедийный боевик', 'Франция', 1995, 'Жан-Мари Пуаре', '1ч 46мин', 'Владелец знаменитого парижского кабаре "Карко", любимец женщин Антуан Карко,
 внезапно оказывается втянутым в головокружительную операцию по спасению маленького китайского мальчика Бао. Карко вылетает в Гонконг за
 ребенком и значительной суммой денег. За ним и Бао гонится мафия, но Карко умудряется с помощью священника
 Тарэна вывезти мальчика в Париж. Но помимо мафии, Карко и Тарэна преследуют ангелы... Только Карко - его совесть,
 ангел-хранитель, а Тарэна - ангел-искуситель...', '../images/les_angels_gradie.jpg', 
 '../movie/Les_Anges_Gardiens.avi');

/////////////////////
ДОБАВЛЕНИЕ АКТЕРОВ:
/////////////////////
INSERT INTO actor(name) VALUES('Нина Усатова');
INSERT INTO film_actor VALUES(1,  1);

INSERT INTO actor(name) VALUES('Виктор Бычков');
INSERT INTO film_actor VALUES(1,  2);

INSERT INTO actor(name) VALUES('Наталья Данилова');
INSERT INTO film_actor VALUES(1,  3);

INSERT INTO actor(name) VALUES('Юрий Кузнецов');
INSERT INTO film_actor VALUES(1,  4);

INSERT INTO actor(name) VALUES('Андрей Краско');
INSERT INTO film_actor VALUES(1,  5);

INSERT INTO actor(name) VALUES('Сергей Васильев');
INSERT INTO film_actor VALUES(1,  6);
********************************
INSERT INTO actor(name) VALUES('Леонид Куравлев');
INSERT INTO film_actor VALUES(2,  7);

INSERT INTO actor(name) VALUES('Евгения Симонова');
INSERT INTO film_actor VALUES(2,  8);

INSERT INTO actor(name) VALUES('Евгений Леонов');
INSERT INTO film_actor VALUES(2,  9);

INSERT INTO actor(name) VALUES('Савелий Крамаров');
INSERT INTO film_actor VALUES(2,  10);

INSERT INTO actor(name) VALUES('Нина Маслова');
INSERT INTO film_actor VALUES(2,  11);

INSERT INTO actor(name) VALUES('Борислав Брондуков');
INSERT INTO film_actor VALUES(2,  12);

INSERT INTO actor(name) VALUES('Валентина Талызина');
INSERT INTO film_actor VALUES(2,  13);

INSERT INTO actor(name) VALUES('Нина Русланова');
INSERT INTO film_actor VALUES(2,  14);
********************************
INSERT INTO actor(name) VALUES('Николай Караченцев');
INSERT INTO film_actor VALUES(3,  15);

INSERT INTO actor(name) VALUES('Всеволод Санаев');
INSERT INTO film_actor VALUES(3,  16);

INSERT INTO actor(name) VALUES('Михаил Кокшенов');
INSERT INTO film_actor VALUES(3,  17);

INSERT INTO actor(name) VALUES('Геннадий Гарбук');
INSERT INTO film_actor VALUES(3,  18);

INSERT INTO actor(name) VALUES('Борис Новиков');
INSERT INTO film_actor VALUES(3,  19);

INSERT INTO actor(name) VALUES('Наталья Харахорина');
INSERT INTO film_actor VALUES(3,  20);

INSERT INTO actor(name) VALUES('Станислав Садальский');
INSERT INTO film_actor VALUES(3,  21);

INSERT INTO actor(name) VALUES('Стефания Станюта');
INSERT INTO film_actor VALUES(3,  22);

INSERT INTO actor(name) VALUES('Александр Беспалый');
INSERT INTO film_actor VALUES(3,  23);

INSERT INTO actor(name) VALUES('Юля Космачева');
INSERT INTO film_actor VALUES(3,  24);

INSERT INTO actor(name) VALUES('Галина Макарова');
INSERT INTO film_actor VALUES(3,  25);

INSERT INTO actor(name) VALUES('Ирина Егорова');
INSERT INTO film_actor VALUES(3,  26);

INSERT INTO actor(name) VALUES('Юрий Кухаренок');
INSERT INTO film_actor VALUES(3,  27);
********************************
INSERT INTO actor(name) VALUES('Жерар Депардье');
INSERT INTO film_actor VALUES(4,  28);

INSERT INTO actor(name) VALUES('Кристиан Клавье');
INSERT INTO film_actor VALUES(4,  29);

INSERT INTO actor(name) VALUES('Эва Гримальди');
INSERT INTO film_actor VALUES(4,  30);

INSERT INTO actor(name) VALUES('Ив Ренье');
INSERT INTO film_actor VALUES(4,  31);

INSERT INTO actor(name) VALUES('Эва Герцигова');
INSERT INTO film_actor VALUES(4,  32);

INSERT INTO actor(name) VALUES('Анна Гейлор');
INSERT INTO film_actor VALUES(4,  33);

INSERT INTO actor(name) VALUES('Оливье Ашар');
INSERT INTO film_actor VALUES(4,  34);

INSERT INTO actor(name) VALUES('Жан Шампьон');
INSERT INTO film_actor VALUES(4,  35);
///////////////////////////////////////////////////////////////

Обновим пути к обложкам и фильмам(ПРИ НЕОПРЕДЕЛЕНИИ ПУТЕЙ):

UPDATE film
SET path_cover = '../images/amerikanka.jpg', 
path_file = '../movie/Amerikanka.avi'
WHERE id = 1;

UPDATE film
SET path_cover = '../images/afonya.jpg', 
path_file = '../movie/Afonya.avi'
WHERE id = 2;

UPDATE film
SET path_cover = '../images/br.jpg', 
path_file = '../movie/BR.avi'
WHERE id = 3;

UPDATE film
SET path_cover = '../images/les_angels_gradie.jpg', 
path_file = '../movie/Les_Anges_Gardiens.avi'
WHERE id = 4;


///////////////////////////////////////////////////////////
/////////////// ЗАПРОСЫ к данным
///////////////////////////////////////////////////////////

Общий запрос к таблице фильмов:
SELECT title, genre, country, year, director, duration, description FROM film 

Пример джоина
SELECT Actor.name, Movie.name FROM actor JOIN actor_movie
    on actor.actor_id = actor_movie.actor_id JOIN movie
        on actor_movie.movie_id = movie.movie_id;
		
		
Джойн для выгрузки актеров по фильму(выведет фильмы с актерами):
SELECT film.title, actor.name FROM actor JOIN film_actor
    on actor.actor_id = film_actor.actor_id JOIN film
                 on film_actor.film_id = film.film_id;
		
		
Запрос (JOIN) - выгрузит актеров к каждому фильму:
SELECT film.title, film.genre, film.country, film.year, film.director,
       film.duration, film.description, actor.name
FROM actor JOIN film_actor on actor.actor_id = film_actor.actor_id JOIN film on film_actor.film_id = film.film_id;

Запрос (JOIN) - выгрузит актеров к конкретному фильму по ID фильма:
SELECT actor.name FROM actor
    JOIN film_actor on actor.actor_id = film_actor.actor_id
    JOIN film on film_actor.film_id = film.film_id WHERE film.film_id = 2;

///////////////////////////////////////////////////////////